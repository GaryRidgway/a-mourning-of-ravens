function placeFirstStanza(e){anchorStanza=document.createElement("div"),anchorStanza.setAttribute("id","anchor");const t=placeStanza(e);t.setAttribute("id","anchor-stanza"),poemContainer.append(anchorStanza);t.getAttribute("uid");return addNonRenderedConnector(t,-1),addNonRenderedConnector(t,1),t}function placeStanza(e,t=null){const n=e.cloneNode(!0);return n.setAttribute("uid",UID()),null!==t?t.leftOffset&&t.topOffset&&(t.leftOffset<0&&t.topOffset<0?anchorStanza.prepend(n):anchorStanza.append(n),n.style.setProperty("--left-offset",parseFloat(t.leftOffset)),n.style.setProperty("--top-offset",parseFloat(t.topOffset))):anchorStanza.append(n),n}function render(e,t=1){const n=parseInt(e.dataset.stanzaNumber),o=fetchStagedStanza(n+t),a=t<0?o:e,r=fetchRenderedStanza(n,getUID(e));let s=defaultRenderOptions;s.leftOffset=t*parseFloat(a.dataset.leftOffset),s.topOffset=t*parseFloat(a.dataset.topOffset);const c=r.style.getPropertyValue("--left-offset");c.length>0&&(s.leftOffset=parseFloat(c)+s.leftOffset);const f=r.style.getPropertyValue("--top-offset");f.length>0&&(s.topOffset=parseFloat(f)+s.topOffset);return{stanza:placeStanza(o,s),options:s}}function addNonRenderedConnector(e,t){const n=getUID(e)+"["+t+"]",o=isInViewport(fetchConnector(e,t));nonRenderedConnectors[n]={stanza:e,direction:t,direction:t,visible:o}}function cascadeRender(e){if("undefined"!=typeof anchorStanza){if(Object.keys(nonRenderedConnectors).length>0){let t=checkForVisibleConnectors();if(t.length>0){let n=0;for(;t.length>0&&cascadeContinueIterating(n,e);)t.forEach((e=>{const t=nonRenderedConnectors[e],n=fetchConnector(t.stanza,t.direction);if(isInViewport(n)){addNonRenderedConnector(render(t.stanza,t.direction).stanza,t.direction),delete nonRenderedConnectors[e]}else t.visible=!1,console.log('Set connector "'+e+'" `visible` to `false`.')})),t=checkForVisibleConnectors(),n++}}else console.error("There are no non-rendered elements.")}else console.error("There is no anchor stanza to cascade from.")}function cascadeContinueIterating(e,t=null){if(null!==t){if(Object.hasOwn(t,"iterationMax")){return e<t.iterationMax}return!0}return!0}